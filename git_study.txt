#安装git后，配置仓库
git config --global user.name "Charlson"                 #配置全局用户名
git config --global user.email "ccreed112233@126.com"    #配置全局邮箱
git config --get user.name                               #查询用户名
git config --get user.email                              #查询邮箱

#https://github.com/ccreed2018/study_note.git
#git@github.com:ccreed2018/study_note.git
#Git管理的文件分为：工作区，版本库，版本库又分为暂存区stage和暂存区分支master(仓库)  即：工作区>>>>暂存区>>>>仓库

git init                           #初始化
git restore <file>                 #撤销工作区修改的内容
git add                            #把工作区修改记录到暂存区 
git restore --staged <file>        #撤销暂存区的修改记录
git commit -m "comment"            #把暂存区的修改提交到仓库  
git reset --hard HEAD~n/HEAD^      #回滚版本库和工作区的修改内容
git log <--pretty=oneline>         #获取版本库中历史版本记录
git reflog                         #获取版本库中的命令提交记录
git reset --hard commit_id         #根据提交的commmit id回滚版本库和工作区
git status                         #查看工作区和暂存区状态
git diff                           #查看工作区和暂存区差异
git diff --cached                  #查看暂存区和仓库差异，
git diff HEAD                      #查看工作区和仓库的差异
git rm <file>                      #从暂存区删除文件


#创建SSH Key：
ssh-keygen -t rsa -C "297517160@qq.com"   
cd ~/.ssh
ls -l   # id_rsa  id_rsa.pub, 将id_rsa.pub的内容配置到github中

git remote add origin git@github.com:ccreed2018/study_note.git  #关联一个远程仓库
git push -u origin master                                       #第一次推送master分支的所有内容
git push origin master                                          #非第一次推送本地提交的修改
git clone git@github.com:ccreed2018/financial_account.git       #从远程仓库克隆到本地

git switch -c dev/git checkout -b dev                           #创建并切换分支dev
git branch                                                      #查看分支
git branch dev                                                  #创建分支dev
git switch/checkout dev                                         #切换到已有分支dev
git merge dev                                                   #合并分支dev到当前分支, "快进模式":直接把master指向dev的当前提交
git merge --no-ff -m "merge with no-ff" dev                     #合并分支dev到当前分支，禁用“Fast forward”模式，-m为commit描述
git branch -d dev                                               #删除分支dev


